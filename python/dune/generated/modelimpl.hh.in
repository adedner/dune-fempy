#include <dune/corepy/pybind11/pybind11.h>
#include <dune/corepy/pybind11/extensions.h>

#include <dune/fem/gridpart/leafgridpart.hh>
#include <dune/fem/gridpart/adaptiveleafgridpart.hh>

#include <dune/fempy/function/virtualizedgridfunction.hh>

#include <dune/fem/schemes/diffusionmodel.hh>
#include "ModelTmp.hh"

typedef #GRIDPARTCHOICE GridPart;
#PYRANGETYPE

PYBIND11_PLUGIN(#MODELNAME) {
  typedef ModelTmp::Model< GridPart#PYTEMPLATE > ModelType;
  typedef DiffusionModelWrapper<ModelType> ModelWrapperType;
  typedef typename ModelWrapperType::Base ModelBase;
  namespace py = pybind11;
  py::module m("#MODELNAME", "pybind model plugin");
  // export abstract base class
  if (!pybind11::already_registered<ModelBase>())
    py::class_< ModelBase >( m, "ModelBase" );
  // actual wrapper class for model derived from abstract base
  py::class_< ModelWrapperType >( m, "get", py::base< ModelBase >() )
  .def( py::init() )
  .def_property_readonly( "dimRange", [](ModelWrapperType&) { return #DIMRANGE; } )
  #PYSETCOEFFICIENT
  ;

  return m.ptr();
}
