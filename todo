ufl2model:
1)  model.generate( a==b ) model.generate( a_ex-a_im==b )
2)  model forcing? Always put forcing in source of DiffusionModel?
    Now all forcings are global functions (f,n). Are they needed or
    integrated into source,alpha?
    Correct way to handle non affine operators - always relly on Newton?
    Will this lead to unnecessary evaluations for linear problems?
3)  dirichlet boundaries and ids -> local and model.g(...)
4)  Throw exception, when ufl expr not known to parser
5)  flux name for return in source function - call all return values the same?
6)  remove all generated model .so from generated files on exit - perhaps say 
    if name has already been used and allow for autogenerated file names
7)  Add methods to set constatns (like coefficient functions) in
    the models, i.e., for time or deltat etc.

------------------------------------------------------------------------------------

Other stuff:
2)  extract dimworld,dimgrid from dgf file
3)  scheme.estimate -> FVFunction with estimates
4)  hierarchicalGrid needed?
5)  dune.fem new memory for dof vectors initialize with zero
7)  functional <-> function
8)  mpi4py in dune.fem.__init__? Doesn't work... Perhaps needs to be
    included in comoon.cc directly
9)  parameters e.g. istl preconditioner
10) subsampling vtk (add subsampling=sample to grid.writVTK)
11) shouldn't it be leafGrid("ALUGridSimplex,dgf,...) instead of other
    way. In all other cases the first string is the database entry
12) make hgrid.globalRefine() always reduce h by 0.5, i.e., use refineStepsForHalf?
13) add option to generate to force recompilation of shared library

--------------------------------------------------------------------------------------

Bugs:
1)  Problem with load balancing bug
2)  Problem with model.set*(gf) not keeping gf alive long enough
3)  GMSH reader not working with YaspGrid due to non interface gridfactory method used
4)  estimator only correct for dimworld=dimgrid

------------------------------------------------------------------------------------
